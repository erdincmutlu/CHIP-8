package main

import (
	"fmt"
	"log"
	"os"

	"github.com/erdincmutlu/CHIP-8/c8"
	"github.com/hajimehoshi/ebiten"
)

var screen [c8.ScreenHeight][c8.ScreenWidth]byte

var prog *c8.Prog

func main() {
	if len(os.Args) < 2 {
		fmt.Printf("usage \"go run main.go ROM_NAME\"\n")
		return
	}

	err := c8.ReadROM(os.Args[1])
	if err != nil {
		return
	}

	initSprites()

	go c8.RunROM()

	prog, err = c8.NewProg()
	if err != nil {
		log.Fatal(err)
	}

	err = ebiten.Run(update, c8.BoardWidth, c8.BoardHeight, 1, "Chip 8 - "+os.Args[1])
	if err != nil {
		log.Fatal(err)
	}
}

func update(screen *ebiten.Image) error {
	if err := prog.Update(); err != nil {
		return err
	}
	if ebiten.IsDrawingSkipped() {
		return nil
	}
	prog.Draw(screen)
	return nil
}

func initSprites() {
	sprites := []byte{
		0xF0, 0x90, 0x90, 0x90, 0xF0, //0
		0x20, 0x60, 0x20, 0x20, 0x70, //1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, //2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, //3
		0x90, 0x90, 0xF0, 0x10, 0x10, //4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, //5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, //6
		0xF0, 0x10, 0x20, 0x40, 0x40, //7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, //8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, //9
		0xF0, 0x90, 0xF0, 0x90, 0x90, //A
		0xE0, 0x90, 0xE0, 0x90, 0xE0, //B
		0xF0, 0x80, 0x80, 0x80, 0xF0, //C
		0xE0, 0x90, 0x90, 0x90, 0xE0, //D
		0xF0, 0x80, 0xF0, 0x80, 0xF0, //E
		0xF0, 0x80, 0xF0, 0x80, 0x80, //F
	}
	copy(c8.Memory[c8.ScreenMemoryStart:], sprites)
}
